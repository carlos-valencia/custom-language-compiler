Terminals unused in grammar

    NOT


Grammar

    0 $accept: function $end

    1 function: function_header variables body

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'
    3                | error

    4 variables: variable variables
    5          | ε

    6 variable: IDENTIFIER ':' type IS statement_

    7 parameters: parameter additional_parameters
    8           | parameter
    9           | ε

   10 additional_parameters: ',' parameter additional_parameters
   11                      | ',' parameter

   12 parameter: IDENTIFIER ':' type

   13 type: INTEGER
   14     | BOOLEAN
   15     | REAL

   16 body: BEGIN_ statement_ END ';'

   17 statement_: statement ';'
   18           | error ';'

   19 statement: expression
   20          | REDUCE operator reductions ENDREDUCE
   21          | IF expression THEN statement_ ELSE statement_ ENDIF
   22          | CASE expression IS cases OTHERS ARROW statement_ ENDCASE

   23 cases: case cases
   24      | ε

   25 case: WHEN INT_LITERAL ARROW statement_
   26     | error

   27 operator: ADDOP
   28         | MULOP

   29 reductions: reductions statement_
   30           | ε

   31 expression: expression OROP bool_addition
   32           | bool_addition

   33 bool_addition: bool_addition ANDOP relation
   34              | relation

   35 relation: relation RELOP term
   36         | term

   37 term: term ADDOP factor
   38     | factor

   39 factor: factor MULOP power
   40       | factor REMOP power
   41       | power

   42 power: negation EXPOP power
   43      | negation

   44 negation: NOTOP negation
   45         | primary

   46 primary: '(' expression ')'
   47        | INT_LITERAL
   48        | REAL_LITERAL
   49        | BOOL_LITERAL
   50        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 46
    ')' (41) 46
    ',' (44) 10 11
    ':' (58) 6 12
    ';' (59) 2 16 17 18
    error (256) 3 18 26
    IDENTIFIER (258) 2 6 12 50
    INT_LITERAL (259) 25 47
    REAL_LITERAL (260) 48
    BOOL_LITERAL (261) 49
    ADDOP (262) 27 37
    MULOP (263) 28 39
    RELOP (264) 35
    ANDOP (265) 33
    OROP (266) 31
    NOTOP (267) 44
    REMOP (268) 40
    EXPOP (269) 42
    BEGIN_ (270) 16
    BOOLEAN (271) 14
    END (272) 16
    ENDREDUCE (273) 20
    FUNCTION (274) 2
    INTEGER (275) 13
    IS (276) 6 22
    REDUCE (277) 20
    RETURNS (278) 2
    CASE (279) 22
    ELSE (280) 21
    ENDCASE (281) 22
    IF (282) 21
    ENDIF (283) 21
    OTHERS (284) 22
    REAL (285) 15
    THEN (286) 21
    WHEN (287) 25
    ARROW (288) 22 25
    NOT (289)


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    function (41)
        on left: 1
        on right: 0
    function_header (42)
        on left: 2 3
        on right: 1
    variables (43)
        on left: 4 5
        on right: 1 4
    variable (44)
        on left: 6
        on right: 4
    parameters (45)
        on left: 7 8 9
        on right: 2
    additional_parameters (46)
        on left: 10 11
        on right: 7 10
    parameter (47)
        on left: 12
        on right: 7 8 10 11
    type (48)
        on left: 13 14 15
        on right: 2 6 12
    body (49)
        on left: 16
        on right: 1
    statement_ (50)
        on left: 17 18
        on right: 6 16 21 22 25 29
    statement (51)
        on left: 19 20 21 22
        on right: 17
    cases (52)
        on left: 23 24
        on right: 22 23
    case (53)
        on left: 25 26
        on right: 23
    operator (54)
        on left: 27 28
        on right: 20
    reductions (55)
        on left: 29 30
        on right: 20 29
    expression (56)
        on left: 31 32
        on right: 19 21 22 31 46
    bool_addition (57)
        on left: 33 34
        on right: 31 32 33
    relation (58)
        on left: 35 36
        on right: 33 34 35
    term (59)
        on left: 37 38
        on right: 35 36 37
    factor (60)
        on left: 39 40 41
        on right: 37 38 39 40
    power (61)
        on left: 42 43
        on right: 39 40 41 42
    negation (62)
        on left: 44 45
        on right: 42 43 44
    primary (63)
        on left: 46 47 48 49 50
        on right: 45


State 0

    0 $accept: • function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    3 function_header: error •

    $default  reduce using rule 3 (function_header)


State 2

    2 function_header: FUNCTION • IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 5


State 3

    0 $accept: function • $end

    $end  shift, and go to state 6


State 4

    1 function: function_header • variables body

    IDENTIFIER  shift, and go to state 7

    $default  reduce using rule 5 (variables)

    variables  go to state 8
    variable   go to state 9


State 5

    2 function_header: FUNCTION IDENTIFIER • parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 9 (parameters)

    parameters  go to state 11
    parameter   go to state 12


State 6

    0 $accept: function $end •

    $default  accept


State 7

    6 variable: IDENTIFIER • ':' type IS statement_

    ':'  shift, and go to state 13


State 8

    1 function: function_header variables • body

    BEGIN_  shift, and go to state 14

    body  go to state 15


State 9

    4 variables: variable • variables

    IDENTIFIER  shift, and go to state 7

    $default  reduce using rule 5 (variables)

    variables  go to state 16
    variable   go to state 9


State 10

   12 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 17


State 11

    2 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'

    RETURNS  shift, and go to state 18


State 12

    7 parameters: parameter • additional_parameters
    8           | parameter •

    ','  shift, and go to state 19

    $default  reduce using rule 8 (parameters)

    additional_parameters  go to state 20


State 13

    6 variable: IDENTIFIER ':' • type IS statement_

    BOOLEAN  shift, and go to state 21
    INTEGER  shift, and go to state 22
    REAL     shift, and go to state 23

    type  go to state 24


State 14

   16 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 25
    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    NOTOP         shift, and go to state 30
    REDUCE        shift, and go to state 31
    CASE          shift, and go to state 32
    IF            shift, and go to state 33
    '('           shift, and go to state 34

    statement_     go to state 35
    statement      go to state 36
    expression     go to state 37
    bool_addition  go to state 38
    relation       go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    negation       go to state 43
    primary        go to state 44


State 15

    1 function: function_header variables body •

    $default  reduce using rule 1 (function)


State 16

    4 variables: variable variables •

    $default  reduce using rule 4 (variables)


State 17

   12 parameter: IDENTIFIER ':' • type

    BOOLEAN  shift, and go to state 21
    INTEGER  shift, and go to state 22
    REAL     shift, and go to state 23

    type  go to state 45


State 18

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    BOOLEAN  shift, and go to state 21
    INTEGER  shift, and go to state 22
    REAL     shift, and go to state 23

    type  go to state 46


State 19

   10 additional_parameters: ',' • parameter additional_parameters
   11                      | ',' • parameter

    IDENTIFIER  shift, and go to state 10

    parameter  go to state 47


State 20

    7 parameters: parameter additional_parameters •

    $default  reduce using rule 7 (parameters)


State 21

   14 type: BOOLEAN •

    $default  reduce using rule 14 (type)


State 22

   13 type: INTEGER •

    $default  reduce using rule 13 (type)


State 23

   15 type: REAL •

    $default  reduce using rule 15 (type)


State 24

    6 variable: IDENTIFIER ':' type • IS statement_

    IS  shift, and go to state 48


State 25

   18 statement_: error • ';'

    ';'  shift, and go to state 49


State 26

   50 primary: IDENTIFIER •

    $default  reduce using rule 50 (primary)


State 27

   47 primary: INT_LITERAL •

    $default  reduce using rule 47 (primary)


State 28

   48 primary: REAL_LITERAL •

    $default  reduce using rule 48 (primary)


State 29

   49 primary: BOOL_LITERAL •

    $default  reduce using rule 49 (primary)


State 30

   44 negation: NOTOP • negation

    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 34

    negation  go to state 50
    primary   go to state 44


State 31

   20 statement: REDUCE • operator reductions ENDREDUCE

    ADDOP  shift, and go to state 51
    MULOP  shift, and go to state 52

    operator  go to state 53


State 32

   22 statement: CASE • expression IS cases OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 34

    expression     go to state 54
    bool_addition  go to state 38
    relation       go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    negation       go to state 43
    primary        go to state 44


State 33

   21 statement: IF • expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 34

    expression     go to state 55
    bool_addition  go to state 38
    relation       go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    negation       go to state 43
    primary        go to state 44


State 34

   46 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 34

    expression     go to state 56
    bool_addition  go to state 38
    relation       go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    negation       go to state 43
    primary        go to state 44


State 35

   16 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 57


State 36

   17 statement_: statement • ';'

    ';'  shift, and go to state 58


State 37

   19 statement: expression •
   31 expression: expression • OROP bool_addition

    OROP  shift, and go to state 59

    $default  reduce using rule 19 (statement)


State 38

   32 expression: bool_addition •
   33 bool_addition: bool_addition • ANDOP relation

    ANDOP  shift, and go to state 60

    $default  reduce using rule 32 (expression)


State 39

   34 bool_addition: relation •
   35 relation: relation • RELOP term

    RELOP  shift, and go to state 61

    $default  reduce using rule 34 (bool_addition)


State 40

   36 relation: term •
   37 term: term • ADDOP factor

    ADDOP  shift, and go to state 62

    $default  reduce using rule 36 (relation)


State 41

   38 term: factor •
   39 factor: factor • MULOP power
   40       | factor • REMOP power

    MULOP  shift, and go to state 63
    REMOP  shift, and go to state 64

    $default  reduce using rule 38 (term)


State 42

   41 factor: power •

    $default  reduce using rule 41 (factor)


State 43

   42 power: negation • EXPOP power
   43      | negation •

    EXPOP  shift, and go to state 65

    $default  reduce using rule 43 (power)


State 44

   45 negation: primary •

    $default  reduce using rule 45 (negation)


State 45

   12 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 12 (parameter)


State 46

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 66


State 47

   10 additional_parameters: ',' parameter • additional_parameters
   11                      | ',' parameter •

    ','  shift, and go to state 19

    $default  reduce using rule 11 (additional_parameters)

    additional_parameters  go to state 67


State 48

    6 variable: IDENTIFIER ':' type IS • statement_

    error         shift, and go to state 25
    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    NOTOP         shift, and go to state 30
    REDUCE        shift, and go to state 31
    CASE          shift, and go to state 32
    IF            shift, and go to state 33
    '('           shift, and go to state 34

    statement_     go to state 68
    statement      go to state 36
    expression     go to state 37
    bool_addition  go to state 38
    relation       go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    negation       go to state 43
    primary        go to state 44


State 49

   18 statement_: error ';' •

    $default  reduce using rule 18 (statement_)


State 50

   44 negation: NOTOP negation •

    $default  reduce using rule 44 (negation)


State 51

   27 operator: ADDOP •

    $default  reduce using rule 27 (operator)


State 52

   28 operator: MULOP •

    $default  reduce using rule 28 (operator)


State 53

   20 statement: REDUCE operator • reductions ENDREDUCE

    $default  reduce using rule 30 (reductions)

    reductions  go to state 69


State 54

   22 statement: CASE expression • IS cases OTHERS ARROW statement_ ENDCASE
   31 expression: expression • OROP bool_addition

    OROP  shift, and go to state 59
    IS    shift, and go to state 70


State 55

   21 statement: IF expression • THEN statement_ ELSE statement_ ENDIF
   31 expression: expression • OROP bool_addition

    OROP  shift, and go to state 59
    THEN  shift, and go to state 71


State 56

   31 expression: expression • OROP bool_addition
   46 primary: '(' expression • ')'

    OROP  shift, and go to state 59
    ')'   shift, and go to state 72


State 57

   16 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 73


State 58

   17 statement_: statement ';' •

    $default  reduce using rule 17 (statement_)


State 59

   31 expression: expression OROP • bool_addition

    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 34

    bool_addition  go to state 74
    relation       go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    negation       go to state 43
    primary        go to state 44


State 60

   33 bool_addition: bool_addition ANDOP • relation

    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 34

    relation  go to state 75
    term      go to state 40
    factor    go to state 41
    power     go to state 42
    negation  go to state 43
    primary   go to state 44


State 61

   35 relation: relation RELOP • term

    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 34

    term      go to state 76
    factor    go to state 41
    power     go to state 42
    negation  go to state 43
    primary   go to state 44


State 62

   37 term: term ADDOP • factor

    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 34

    factor    go to state 77
    power     go to state 42
    negation  go to state 43
    primary   go to state 44


State 63

   39 factor: factor MULOP • power

    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 34

    power     go to state 78
    negation  go to state 43
    primary   go to state 44


State 64

   40 factor: factor REMOP • power

    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 34

    power     go to state 79
    negation  go to state 43
    primary   go to state 44


State 65

   42 power: negation EXPOP • power

    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    NOTOP         shift, and go to state 30
    '('           shift, and go to state 34

    power     go to state 80
    negation  go to state 43
    primary   go to state 44


State 66

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 67

   10 additional_parameters: ',' parameter additional_parameters •

    $default  reduce using rule 10 (additional_parameters)


State 68

    6 variable: IDENTIFIER ':' type IS statement_ •

    $default  reduce using rule 6 (variable)


State 69

   20 statement: REDUCE operator reductions • ENDREDUCE
   29 reductions: reductions • statement_

    error         shift, and go to state 25
    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    NOTOP         shift, and go to state 30
    ENDREDUCE     shift, and go to state 81
    REDUCE        shift, and go to state 31
    CASE          shift, and go to state 32
    IF            shift, and go to state 33
    '('           shift, and go to state 34

    statement_     go to state 82
    statement      go to state 36
    expression     go to state 37
    bool_addition  go to state 38
    relation       go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    negation       go to state 43
    primary        go to state 44


State 70

   22 statement: CASE expression IS • cases OTHERS ARROW statement_ ENDCASE

    error  shift, and go to state 83
    WHEN   shift, and go to state 84

    OTHERS  reduce using rule 24 (cases)

    cases  go to state 85
    case   go to state 86


State 71

   21 statement: IF expression THEN • statement_ ELSE statement_ ENDIF

    error         shift, and go to state 25
    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    NOTOP         shift, and go to state 30
    REDUCE        shift, and go to state 31
    CASE          shift, and go to state 32
    IF            shift, and go to state 33
    '('           shift, and go to state 34

    statement_     go to state 87
    statement      go to state 36
    expression     go to state 37
    bool_addition  go to state 38
    relation       go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    negation       go to state 43
    primary        go to state 44


State 72

   46 primary: '(' expression ')' •

    $default  reduce using rule 46 (primary)


State 73

   16 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 16 (body)


State 74

   31 expression: expression OROP bool_addition •
   33 bool_addition: bool_addition • ANDOP relation

    ANDOP  shift, and go to state 60

    $default  reduce using rule 31 (expression)


State 75

   33 bool_addition: bool_addition ANDOP relation •
   35 relation: relation • RELOP term

    RELOP  shift, and go to state 61

    $default  reduce using rule 33 (bool_addition)


State 76

   35 relation: relation RELOP term •
   37 term: term • ADDOP factor

    ADDOP  shift, and go to state 62

    $default  reduce using rule 35 (relation)


State 77

   37 term: term ADDOP factor •
   39 factor: factor • MULOP power
   40       | factor • REMOP power

    MULOP  shift, and go to state 63
    REMOP  shift, and go to state 64

    $default  reduce using rule 37 (term)


State 78

   39 factor: factor MULOP power •

    $default  reduce using rule 39 (factor)


State 79

   40 factor: factor REMOP power •

    $default  reduce using rule 40 (factor)


State 80

   42 power: negation EXPOP power •

    $default  reduce using rule 42 (power)


State 81

   20 statement: REDUCE operator reductions ENDREDUCE •

    $default  reduce using rule 20 (statement)


State 82

   29 reductions: reductions statement_ •

    $default  reduce using rule 29 (reductions)


State 83

   26 case: error •

    $default  reduce using rule 26 (case)


State 84

   25 case: WHEN • INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 88


State 85

   22 statement: CASE expression IS cases • OTHERS ARROW statement_ ENDCASE

    OTHERS  shift, and go to state 89


State 86

   23 cases: case • cases

    error  shift, and go to state 83
    WHEN   shift, and go to state 84

    OTHERS  reduce using rule 24 (cases)

    cases  go to state 90
    case   go to state 86


State 87

   21 statement: IF expression THEN statement_ • ELSE statement_ ENDIF

    ELSE  shift, and go to state 91


State 88

   25 case: WHEN INT_LITERAL • ARROW statement_

    ARROW  shift, and go to state 92


State 89

   22 statement: CASE expression IS cases OTHERS • ARROW statement_ ENDCASE

    ARROW  shift, and go to state 93


State 90

   23 cases: case cases •

    $default  reduce using rule 23 (cases)


State 91

   21 statement: IF expression THEN statement_ ELSE • statement_ ENDIF

    error         shift, and go to state 25
    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    NOTOP         shift, and go to state 30
    REDUCE        shift, and go to state 31
    CASE          shift, and go to state 32
    IF            shift, and go to state 33
    '('           shift, and go to state 34

    statement_     go to state 94
    statement      go to state 36
    expression     go to state 37
    bool_addition  go to state 38
    relation       go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    negation       go to state 43
    primary        go to state 44


State 92

   25 case: WHEN INT_LITERAL ARROW • statement_

    error         shift, and go to state 25
    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    NOTOP         shift, and go to state 30
    REDUCE        shift, and go to state 31
    CASE          shift, and go to state 32
    IF            shift, and go to state 33
    '('           shift, and go to state 34

    statement_     go to state 95
    statement      go to state 36
    expression     go to state 37
    bool_addition  go to state 38
    relation       go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    negation       go to state 43
    primary        go to state 44


State 93

   22 statement: CASE expression IS cases OTHERS ARROW • statement_ ENDCASE

    error         shift, and go to state 25
    IDENTIFIER    shift, and go to state 26
    INT_LITERAL   shift, and go to state 27
    REAL_LITERAL  shift, and go to state 28
    BOOL_LITERAL  shift, and go to state 29
    NOTOP         shift, and go to state 30
    REDUCE        shift, and go to state 31
    CASE          shift, and go to state 32
    IF            shift, and go to state 33
    '('           shift, and go to state 34

    statement_     go to state 96
    statement      go to state 36
    expression     go to state 37
    bool_addition  go to state 38
    relation       go to state 39
    term           go to state 40
    factor         go to state 41
    power          go to state 42
    negation       go to state 43
    primary        go to state 44


State 94

   21 statement: IF expression THEN statement_ ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 97


State 95

   25 case: WHEN INT_LITERAL ARROW statement_ •

    $default  reduce using rule 25 (case)


State 96

   22 statement: CASE expression IS cases OTHERS ARROW statement_ • ENDCASE

    ENDCASE  shift, and go to state 98


State 97

   21 statement: IF expression THEN statement_ ELSE statement_ ENDIF •

    $default  reduce using rule 21 (statement)


State 98

   22 statement: CASE expression IS cases OTHERS ARROW statement_ ENDCASE •

    $default  reduce using rule 22 (statement)
